<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Moorberry</title>
    <link>https://moorberry.net/tags/ruby/</link>
    <description>Recent content in Ruby on Moorberry</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Oct 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://moorberry.net/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSV Special Character</title>
      <link>https://moorberry.net/blog/csv-special-character/</link>
      <pubDate>Tue, 08 Oct 2013 00:00:00 +0000</pubDate>
      <guid>https://moorberry.net/blog/csv-special-character/</guid>
      <description>&lt;p&gt;Separate CSV data with a special character (example: thorn þ).&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;p&gt;&lt;strong&gt;Google DFP&lt;/strong&gt; (Double-click for Publishers) uses a special character in their CSV exports. Specifically the thorn character and it&amp;rsquo;s a pain. But Ruby can make it better.&lt;/p&gt;&#xA;&lt;p&gt;You can skip to the bottom of this article for the neccessary code or read on from here for more details about figuring out the path to certainty.&lt;/p&gt;&#xA;&lt;h2 id=&#34;unicode&#34;&gt;Unicode&lt;/h2&gt;&#xA;&lt;p&gt;Find the unicode character. For my example the thorn character &lt;strong&gt;þ&lt;/strong&gt; is represented as &lt;strong&gt;u00FE&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rails 2 and acts_as_paranoid</title>
      <link>https://moorberry.net/blog/rails-2-acts-as-paranoid/</link>
      <pubDate>Thu, 15 Aug 2013 00:00:00 +0000</pubDate>
      <guid>https://moorberry.net/blog/rails-2-acts-as-paranoid/</guid>
      <description>&lt;p&gt;Overrides some basic Active Record methods for the current model so that calling #destroy sets a &lt;em&gt;deleted_at&lt;/em&gt; field to the current timestamp.&lt;/p&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create migration file&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;acts_as_paranoid, by default, assumes the table has a &lt;em&gt;deleted_at&lt;/em&gt; date/time field.  Most normal model operations will work, but there will be some oddities.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ script/server generate migration deleted_at:datetime&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And then modify your migration file (app/db/migrations/000000000000_add_deleted_at…rb)to look something like:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;AddDeletedAtToWidgets&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; ActiveRecord&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;Migration&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;up&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    add_column &lt;span style=&#34;color:#f1fa8c&#34;&gt;:widgets&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;:deleted_at&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;:datetime&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;:null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;down&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    remove_column &lt;span style=&#34;color:#f1fa8c&#34;&gt;:widgets&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;:deleted_at&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Add the gem source to your Gemfile&lt;/strong&gt; (app/Gemfile)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Book Review: Eloquent Ruby</title>
      <link>https://moorberry.net/blog/eloquent-ruby-book-review/</link>
      <pubDate>Sat, 06 Apr 2013 00:00:00 +0000</pubDate>
      <guid>https://moorberry.net/blog/eloquent-ruby-book-review/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/gp/product/0321584104/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0321584104&amp;linkCode=as2&amp;tag=moorberry-20&#34; target=&#34;_blank&#34;&gt;Eloquent Ruby&lt;/a&gt;&lt;img src=&#34;http://www.assoc-amazon.com/e/ir?t=moorberry-20&amp;l=as2&amp;o=1&amp;a=0321584104&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important;display:inline;margin:0px !important;&#34; /&gt;&#xA;is a book about the Ruby programming language that focuses on &lt;strong&gt;Ruby programming style&lt;/strong&gt; by teaching you how to write your code as a real world hardened Rubyist.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Airbrake: Send Error Notices using Javascript</title>
      <link>https://moorberry.net/blog/airbrake-error-notice-javascript/</link>
      <pubDate>Tue, 19 Feb 2013 00:00:00 +0000</pubDate>
      <guid>https://moorberry.net/blog/airbrake-error-notice-javascript/</guid>
      <description>&lt;p&gt;Right now you may be saying to yourself, &amp;ldquo;but why not just use an AJAX request inside of my Javascript application or use the Image().src hack&amp;hellip;&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Special Notes Lookup in Rails</title>
      <link>https://moorberry.net/blog/notes/</link>
      <pubDate>Tue, 06 Nov 2012 00:00:00 +0000</pubDate>
      <guid>https://moorberry.net/blog/notes/</guid>
      <description>&lt;p&gt;Add special notes to your source code comments in Rails to later remind you of tasks you need to complete:&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTML Not Rendering in Gmail</title>
      <link>https://moorberry.net/blog/html-not-rendering-in-gmail/</link>
      <pubDate>Sat, 10 Dec 2011 00:00:00 +0000</pubDate>
      <guid>https://moorberry.net/blog/html-not-rendering-in-gmail/</guid>
      <description>&lt;p&gt;I’ve been handling many of my company’s email campaigns for some time now and I can honestly say that it’s been pretty fun from a technical stand-point. There’s a lot that goes into email marketing (not including the marketing/sales implications). It has it’s own conventions, ideologies, and I believe to the utmost that there’s a larger future than presumed in store for the sometimes misunderstood technology. (I’m patiently waiting for a mobile device header-type.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Export Data as CSV</title>
      <link>https://moorberry.net/blog/export-csv/</link>
      <pubDate>Mon, 14 Nov 2011 00:00:00 +0000</pubDate>
      <guid>https://moorberry.net/blog/export-csv/</guid>
      <description>&lt;p&gt;In my research I found a hundred and more different ways to manage the task of exporting data into a CSV file. Whenever I’m learning something new, on a new system or with a new language, I like to build the process myself from scratch. And being a minimalist programmer it just seems fitting. Enjoy&lt;/p&gt;</description>
    </item>
    <item>
      <title>Server vs Client</title>
      <link>https://moorberry.net/blog/server-vs-client/</link>
      <pubDate>Thu, 25 Mar 2010 00:00:00 +0000</pubDate>
      <guid>https://moorberry.net/blog/server-vs-client/</guid>
      <description>&lt;p&gt;My presumption is that it’s because of the passionate advent of JQuery, that there has been an increasing rise of using Javascript, in precedence of a server side language like PHP or Ruby. This circumstance is arguably the sole cause to how and why, &lt;em&gt;mostly designers&lt;/em&gt;, are simply not learning a better way. I’m here to enlighten you.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
